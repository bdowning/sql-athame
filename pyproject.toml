[tool.poetry]
name = "sql-athame"
version = "0.4.0-alpha-10"
description = "Python tool for slicing and dicing SQL"
authors = ["Brian Downing <bdowning@lavos.net>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/bdowning/sql-athame"
repository = "https://github.com/bdowning/sql-athame"

[tool.poetry.extras]
asyncpg = ["asyncpg"]

[tool.poetry.dependencies]
python = "^3.9"
asyncpg = { version = "*", optional = true }
typing-extensions = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
mypy = "*"
flake8 = "*"
ipython = "*"
pytest-cov = "*"
bump2version = "*"
asyncpg = "*"
pytest-asyncio = "*"
grip = "*"
SQLAlchemy = "*"
ruff = "*"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = [
    "ASYNC",
    "B",
    "BLE",
    "C4",
    "DTZ",
    "E",
    "F",
    "I",
    "INP",
    "ISC",
    "LOG",
    "N",
    "PIE",
    "PT",
    "RET",
    "RUF",
    "SLOT",
    "UP",
]
flake8-comprehensions.allow-dict-calls-with-keyword-arguments = true
ignore = [
    "E501",    # line too long
    "E721",    # type checks, currently broken
    "ISC001",  # conflicts with ruff format
    "PT004",   # Fixture `...` does not return anything, add leading underscore
    "RET505",  # Unnecessary `else` after `return` statement
    "RET506",  # Unnecessary `else` after `raise` statement
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",  # wildcard import
]

[tool.pytest.ini_options]
addopts = [
    "-v",
    "--cov",
    "--cov-report", "xml:results/pytest/coverage.xml",
    "--cov-report", "html:results/pytest/cov_html",
    "--cov-report", "term-missing",
    "--junitxml=results/pytest/results.xml",
    "--durations=5",
]
junit_family = "legacy"
asyncio_mode = "auto"

[tool.coverage]
run.include = [
    "sql_athame/**/*.py",
    "tests/**/*.py",
]
report.precision = 2

[tool.mypy]
disallow_incomplete_defs = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "asyncpg",
]
ignore_missing_imports = true
